@page "/"
@using GraphQLExample.GraphQL
@inject GraphQLExampleClient Client
@rendermode InteractiveServer

<PageTitle>Home</PageTitle>

<div class="grid grid-cols-6 gap-4">
    <div class="col-span-1">
        <div class="grid grid-cols-6 gap-4 border-2 p-2 rounded-2xl border-blue-500 bg-gray-200">
            <label class="col-span-1">Title</label>
            <input type="text" @bind="_queryTitle" class="border col-span-5 bg-white"/>
            <label class="col-span-1">Author</label>
            <select @bind="_queryAuthor" class="border col-span-5 bg-white">
                <option></option>
                @if (_authors != null)
                {
                    @foreach (var author in _authors)
                    {
                        <option value="@author.Id">@author.Name</option>
                    }
                }
            </select>
            <label class="col-span-1">Library</label>
            <select @bind="_queryLibrary" class="border col-span-5 bg-white">
                <option></option>
                @if (_libraries != null)
                {
                    @foreach (var library in _libraries)
                    {
                        <option value="@library.Id">@library.Name</option>
                    }
                }
            </select>
            <button
                class="col-span-2 col-start-5 mt-1 mb-1 font-bold py-2 px-4 rounded bg-blue-500 text-white hover:bg-blue-700"
                @onclick="GetBooks"
                data-testid="get-books-button">
                Get Books
            </button>
        </div>
    </div>
    <div class="col-span-5 border-2 p-2 rounded-2xl border-blue-500 bg-gray-200">
        @if (_books != null)
        {
            <div class="flex">
            @foreach (var book in _books)
            {
                <BookCard AuthorName="@book.Author?.Name" BookTitle="@book.Title" LibraryName="@book.Library.Name" />
            }
            </div>
        }
    </div>
    <div class="col-span-1">
        <div class="grid grid-cols-6 gap-4 border-2 p-2 rounded-2xl border-blue-500 bg-gray-200">
            <label class="col-span-1">Title</label>
            <input type="text" @bind="_title" class="border col-span-5 bg-white" data-testid="create-book-title"/>
            <label class="col-span-1">Author</label>
            <select @bind="_authorId" class="border col-span-5 bg-white" data-testid="create-book-author">
                <option></option>
                @if (_authors != null)
                {
                    @foreach (var author in _authors)
                    {
                        <option value="@author.Id">@author.Name</option>
                    }
                }
            </select>
            <label class="col-span-1">Library</label>
            <select @bind="_libraryId" class="border col-span-5 bg-white" data-testid="create-book-library">
                <option></option>
                @if (_libraries != null)
                {
                    @foreach (var library in _libraries)
                    {
                        <option value="@library.Id">@library.Name</option>
                    }
                }
            </select>
            <button
                class="col-span-2 col-start-5 mt-1 mb-1 font-bold py-2 px-4 rounded bg-blue-500 text-white hover:bg-blue-700"
                @onclick="AddBook"
                data-testid="create-book-button">
                Add Book
            </button>
        </div>
    </div>
    <div class="col-span-5 border-2 p-2 rounded-2xl border-blue-500 bg-gray-200">
        <ul>
            @if (_book != null)
            {
                <BookCard AuthorName="@_book.Author?.Name" BookTitle="@_book.Title" LibraryName="@_book.Library.Name" />
            }
        </ul>
    </div>
</div>

@code {
    IReadOnlyList<IGetBooks_Books>? _books;
    IReadOnlyList<IGetLibraries_Libraries>? _libraries;
    IReadOnlyList<IGetAuthors_Authors>? _authors;
    IGetBook_Book? _book;

    string _authorId;
    string _libraryId;
    string _title;
    string? _queryTitle;
    string? _queryAuthor;
    string? _queryLibrary;

    protected override async Task OnInitializedAsync()
    {
        var librariesResult = await Client.GetLibraries.ExecuteAsync();
        librariesResult.EnsureNoErrors();

        _libraries = librariesResult.Data?.Libraries;
        
        var authorsResult = await Client.GetAuthors.ExecuteAsync();
        authorsResult.EnsureNoErrors();

        _authors = authorsResult.Data?.Authors;
    }

    async Task GetBooks()
    {
        var input = new BooksQueryInput();
        input.Title = !string.IsNullOrEmpty(_queryTitle) ? _queryTitle : null;
        input.AuthorId = !string.IsNullOrEmpty(_queryAuthor) ? _queryAuthor : null;
        input.LibraryId = !string.IsNullOrEmpty(_queryLibrary) ? _queryLibrary : null;

        var result = await Client.GetBooks.ExecuteAsync(input);

        result.EnsureNoErrors();

        _books = result.Data?.Books;
    }

    async Task AddBook()
    {
        var id = Guid.NewGuid().ToString();
        var input = new BookInput
        {
            Id = id,
            AuthorId = _authorId,
            LibraryId = _libraryId,
            Title = _title
        };

        await Client.AddBook.ExecuteAsync(input);
        
        await GetBookById(id);
    }

    async Task GetBookById(string id)
    {
        var input = new BookQueryInput
        {
            Id = id
        };

        var result = await Client.GetBook.ExecuteAsync(input);
        result.EnsureNoErrors();

        _book = result.Data?.Book;
    }
}